CREATE TABLE podcasts (
    id TEXT NOT NULL PRIMARY KEY,
    title TEXT NOT NULL,
    description TEXT NOT NULL,
    artworkUrl TEXT,
    feedUrl TEXT NOT NULL UNIQUE,
    lastUpdated INTEGER NOT NULL,
    autoDownload INTEGER NOT NULL DEFAULT 1
);

CREATE TABLE episodes (
    id TEXT NOT NULL PRIMARY KEY,
    podcastId TEXT NOT NULL REFERENCES podcasts(id) ON DELETE CASCADE,
    title TEXT NOT NULL,
    description TEXT NOT NULL,
    audioUrl TEXT NOT NULL,
    publishDate INTEGER NOT NULL,
    duration INTEGER,
    imageUrl TEXT,
    chapters TEXT
);

CREATE TABLE playback_state (
    episodeId TEXT NOT NULL PRIMARY KEY REFERENCES episodes(id) ON DELETE CASCADE,
    positionMs INTEGER NOT NULL,
    durationMs INTEGER,
    updatedAt INTEGER NOT NULL,
    isCompleted INTEGER NOT NULL DEFAULT 0,
    addedToPlaylist INTEGER NOT NULL DEFAULT 1
);

CREATE TABLE downloads (
    episodeId TEXT NOT NULL PRIMARY KEY REFERENCES episodes(id) ON DELETE CASCADE,
    status TEXT NOT NULL,
    progress REAL NOT NULL,
    filePath TEXT
);

upsertPodcast:
INSERT OR REPLACE INTO podcasts(id, title, description, artworkUrl, feedUrl, lastUpdated, autoDownload)
VALUES (?, ?, ?, ?, ?, ?, ?);

upsertEpisode:
INSERT OR REPLACE INTO episodes(id, podcastId, title, description, audioUrl, publishDate, duration, imageUrl, chapters)
VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);

removeEpisodesForPodcast:
DELETE FROM episodes WHERE podcastId = ?;

deleteDownloadsByPodcastId:
DELETE FROM downloads WHERE episodeId IN (
    SELECT id FROM episodes WHERE podcastId = ?
);

deletePlaybackByPodcastId:
DELETE FROM playback_state WHERE episodeId IN (
    SELECT id FROM episodes WHERE podcastId = ?
);

updateAutoDownload:
UPDATE podcasts SET autoDownload = ? WHERE id = ?;

upsertPlayback:
INSERT OR REPLACE INTO playback_state(episodeId, positionMs, durationMs, updatedAt, isCompleted, addedToPlaylist)
VALUES (?, ?, ?, ?, ?, ?);

upsertDownload:
INSERT OR REPLACE INTO downloads(episodeId, status, progress, filePath)
VALUES (?, ?, ?, ?);

selectAllPodcasts:
SELECT id, title, description, artworkUrl, feedUrl, lastUpdated, autoDownload
FROM podcasts
ORDER BY lastUpdated DESC;

selectEpisodesByPodcast:
SELECT e.id, e.podcastId, p.title AS podcastTitle, e.title, e.description, e.audioUrl, e.publishDate, e.duration, e.imageUrl, e.chapters
FROM episodes e
JOIN podcasts p ON e.podcastId = p.id
WHERE e.podcastId = ?
ORDER BY e.publishDate DESC;

-- 获取特定播客的所有单集（带完整Podcast信息）
selectEpisodesWithPodcastByPodcastId:
SELECT e.id, e.podcastId, e.title, e.description, e.audioUrl, e.publishDate, e.duration, e.imageUrl, e.chapters,
       p.id AS podcastId_, p.title AS podcastTitle, p.description AS podcastDescription, p.artworkUrl AS podcastArtwork,
       p.feedUrl AS podcastFeed, p.lastUpdated AS podcastLastUpdated, p.autoDownload AS podcastAutoDownload
FROM episodes e
JOIN podcasts p ON e.podcastId = p.id
WHERE e.podcastId = ?
ORDER BY e.publishDate DESC;

selectEpisodeWithPodcastByEpisodeId:
SELECT e.id, e.podcastId, e.title, e.description, e.audioUrl, e.publishDate, e.duration, e.imageUrl, e.chapters,
       p.id AS podcastId_, p.title AS podcastTitle, p.description AS podcastDescription, p.artworkUrl AS podcastArtwork,
       p.feedUrl AS podcastFeed, p.lastUpdated AS podcastLastUpdated, p.autoDownload AS podcastAutoDownload
FROM episodes e
JOIN podcasts p ON e.podcastId = p.id
WHERE e.id = ?;

selectRecentEpisodes:
SELECT e.id, e.podcastId, e.title, e.description, e.audioUrl, e.publishDate, e.duration, e.imageUrl, e.chapters,
       p.id AS podcastId_, p.title AS podcastTitle, p.description AS podcastDescription, p.artworkUrl AS podcastArtwork,
       p.feedUrl AS podcastFeed, p.lastUpdated AS podcastLastUpdated, p.autoDownload AS podcastAutoDownload
FROM episodes e
JOIN podcasts p ON e.podcastId = p.id
ORDER BY publishDate DESC
LIMIT ?;

-- 最近更新的单集，每个播客只取最新的一集
selectRecentEpisodesUnique:
SELECT e.id, e.podcastId, e.title, e.description, e.audioUrl, e.publishDate, e.duration, e.imageUrl, e.chapters,
       p.id AS podcastId_, p.title AS podcastTitle, p.description AS podcastDescription, p.artworkUrl AS podcastArtwork,
       p.feedUrl AS podcastFeed, p.lastUpdated AS podcastLastUpdated, p.autoDownload AS podcastAutoDownload
FROM episodes e
JOIN podcasts p ON e.podcastId = p.id
WHERE e.id IN (
    SELECT e2.id
    FROM episodes e2
    WHERE e2.podcastId = e.podcastId
    ORDER BY e2.publishDate DESC
    LIMIT 1
)
ORDER BY e.publishDate DESC
LIMIT ?;

-- 所有最近更新的单集（用于查看更多页面）
selectAllRecentEpisodes:
SELECT e.id, e.podcastId, e.title, e.description, e.audioUrl, e.publishDate, e.duration, e.imageUrl, e.chapters,
       p.id AS podcastId_, p.title AS podcastTitle, p.description AS podcastDescription, p.artworkUrl AS podcastArtwork,
       p.feedUrl AS podcastFeed, p.lastUpdated AS podcastLastUpdated, p.autoDownload AS podcastAutoDownload
FROM episodes e
JOIN podcasts p ON e.podcastId = p.id
ORDER BY e.publishDate DESC;

selectRecentPlayback:
SELECT e.id, e.podcastId, e.title, e.description, e.audioUrl, e.publishDate, e.duration, e.imageUrl, e.chapters,
       p.id AS podcastId_, p.title AS podcastTitle, p.description AS podcastDescription, p.artworkUrl AS podcastArtwork,
       p.feedUrl AS podcastFeed, p.lastUpdated AS podcastLastUpdated, p.autoDownload AS podcastAutoDownload,
       ps.positionMs, ps.durationMs, ps.updatedAt, ps.isCompleted, ps.addedToPlaylist
FROM playback_state ps
JOIN episodes e ON ps.episodeId = e.id
JOIN podcasts p ON e.podcastId = p.id
ORDER BY ps.updatedAt DESC
LIMIT ?;

-- 最近收听的单集，每个播客只取最近播放的一集
selectRecentPlaybackUnique:
SELECT e.id, e.podcastId, e.title, e.description, e.audioUrl, e.publishDate, e.duration, e.imageUrl, e.chapters,
       p.id AS podcastId_, p.title AS podcastTitle, p.description AS podcastDescription, p.artworkUrl AS podcastArtwork,
       p.feedUrl AS podcastFeed, p.lastUpdated AS podcastLastUpdated, p.autoDownload AS podcastAutoDownload,
       ps.positionMs, ps.durationMs, ps.updatedAt, ps.isCompleted, ps.addedToPlaylist
FROM playback_state ps
JOIN episodes e ON ps.episodeId = e.id
JOIN podcasts p ON e.podcastId = p.id
WHERE ps.episodeId IN (
    SELECT ps2.episodeId
    FROM playback_state ps2
    JOIN episodes e2 ON ps2.episodeId = e2.id
    WHERE e2.podcastId = e.podcastId
    ORDER BY ps2.updatedAt DESC
    LIMIT 1
)
ORDER BY ps.updatedAt DESC
LIMIT ?;

-- 所有最近收听的单集（用于查看更多页面）
selectAllRecentPlayback:
SELECT e.id, e.podcastId, e.title, e.description, e.audioUrl, e.publishDate, e.duration, e.imageUrl, e.chapters,
       p.id AS podcastId_, p.title AS podcastTitle, p.description AS podcastDescription, p.artworkUrl AS podcastArtwork,
       p.feedUrl AS podcastFeed, p.lastUpdated AS podcastLastUpdated, p.autoDownload AS podcastAutoDownload,
       ps.positionMs, ps.durationMs, ps.updatedAt, ps.isCompleted, ps.addedToPlaylist
FROM playback_state ps
JOIN episodes e ON ps.episodeId = e.id
JOIN podcasts p ON e.podcastId = p.id
ORDER BY ps.updatedAt DESC;

selectDownloadStatuses:
SELECT episodeId, status, progress, filePath FROM downloads;

selectPlaybackForEpisode:
SELECT episodeId, positionMs, durationMs, updatedAt, isCompleted, addedToPlaylist FROM playback_state WHERE episodeId = ?;

-- Playlist queries: get all episodes in playlist (not completed)
selectPlaylistEpisodes:
SELECT e.id, e.podcastId, e.title, e.description, e.audioUrl, e.publishDate, e.duration, e.imageUrl, e.chapters,
       p.id AS podcastId_, p.title AS podcastTitle, p.description AS podcastDescription, p.artworkUrl AS podcastArtwork,
       p.feedUrl AS podcastFeed, p.lastUpdated AS podcastLastUpdated, p.autoDownload AS podcastAutoDownload,
       ps.positionMs, ps.durationMs, ps.updatedAt, ps.isCompleted, ps.addedToPlaylist
FROM playback_state ps
JOIN episodes e ON ps.episodeId = e.id
JOIN podcasts p ON e.podcastId = p.id
WHERE ps.addedToPlaylist = 1 AND ps.isCompleted = 0
ORDER BY ps.updatedAt DESC;

-- Mark episode as completed
markEpisodeCompleted:
UPDATE playback_state SET isCompleted = 1 WHERE episodeId = ?;

-- Remove episode from playlist
removeFromPlaylist:
UPDATE playback_state SET addedToPlaylist = 0 WHERE episodeId = ?;

-- Add episode back to playlist
addToPlaylist:
UPDATE playback_state SET addedToPlaylist = 1, isCompleted = 0 WHERE episodeId = ?;

-- New queries for smart episode upsert
selectExistingEpisodeIds:
SELECT id FROM episodes WHERE podcastId = ?;

removeEpisodeById:
DELETE FROM episodes WHERE id = ?;

-- Subscription management
deletePodcastById:
DELETE FROM podcasts WHERE id = ?;

updatePodcastTitle:
UPDATE podcasts SET title = ? WHERE id = ?;

selectPodcastByFeedUrl:
SELECT id, title, description, artworkUrl, feedUrl, lastUpdated, autoDownload
FROM podcasts
WHERE feedUrl = ?;
